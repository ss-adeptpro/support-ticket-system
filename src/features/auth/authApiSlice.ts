import { apiSlice } from "../../api/apiSlice";
import { API_ENDPOINT_DEAFULT_TIMEOUT, TLoginAuthArgs, TLoginAuthResponse } from "./auth.types";
import { logOut, setCredentials } from "./authSlice";

//assign tags for caching
//const authApiWithTag = apiSlice.enhanceEndpoints({addTagTypes: ["Ticket", "User"]})  //invalidate the cache

export const authApiSlice = apiSlice.injectEndpoints({
  endpoints: builder => ({
    login: builder.mutation<TLoginAuthResponse, TLoginAuthArgs>({
			query: (credentials: TLoginAuthArgs) => ({
				url: '/auth',
				method: 'POST',
				body: { ...credentials },
        //if taking over > API_ENDPOINT_DEAFULT_TIMEOUTms, something is wrong with Api so abort the request.
        //this timeout will take priority
        timeout: API_ENDPOINT_DEAFULT_TIMEOUT
			}),
      async onQueryStarted(arg, { dispatch, queryFulfilled }) {
				try {
					const { data } = await queryFulfilled;
          const { accessToken } = data;
          //dispatch this action either from here or from login component
					accessToken && dispatch(setCredentials({ accessToken }));
				} catch (err) {
					console.log('authApiSlice error comes here ', err);
				}
			},
		}),
    onLogout: builder.mutation<TLoginAuthResponse, void>({
			query: () => ({
				url: '/auth/logout',
				method: 'POST',
        //if taking over > API_ENDPOINT_DEAFULT_TIMEOUTms, something is wrong so abort the request.
        //this timeout will take priority
        timeout: API_ENDPOINT_DEAFULT_TIMEOUT
			}),
      async onQueryStarted(arg, { dispatch, queryFulfilled }) {
				try {
					await queryFulfilled;
          //dispatch this action either from here or from login component
					dispatch(logOut());

          // Manually reset the api state completely. 
          // This will immediately remove all existing cache entries, and all queries will be considered 'uninitialized'.
					dispatch(apiSlice.util.resetApiState());
				} catch (err) {
					//console.log(err);
				}
			},
		})
  })
})


/*hooks for endpoints are autogenerated*/
export const {useLoginMutation, useOnLogoutMutation} = authApiSlice